{"version":3,"file":"chunk-95978a6d.js","sources":["../../src/components/ts-style-form.js","../../src/components/ts-style-input.js","../../src/components/ts-style-select.js","../../src/components/ts-style-textarea.js","../../src/components/ts-contact.js"],"sourcesContent":["\n\nimport { css } from 'lit-element';\n\nexport const TsFormStyle = css`\n  :host {\n    display: block;\n  }\n  .main-frame {\n    margin: 0 auto;\n    padding: 0 24px 48px 24px;\n    max-width: 900px;\n    overflow: hidden;\n  }\n  .empty-cart {\n    text-align: center;\n    white-space: nowrap;\n    color: var(--app-secondary-color);\n  }\n  h2 {\n    font-size: 24px;\n    font-weight: 300;\n    padding-bottom: 14px;\n  }\n`;","\n\nimport { css } from 'lit-element';\n\nexport const TsInputStyle = css`\n  ts-input {\n    display: inline-block;\n    margin: 5px 0px 5px 0px;\n  }\n  ts-input > input::-webkit-input-placeholder {\n    color: transparent;\n  }\n  ts-input > input::-moz-placeholder {\n    color: transparent;\n  }\n  ts-input > input:-ms-input-placeholder {\n    color: transparent;\n  }\n  ts-input > input::-ms-input-placeholder {\n    color: transparent;\n  }\n  ts-input > input {\n    font-size: 1em;\n    font-weight: 300;\n    color: var(--app-secondary-color);\n    border: none;\n    padding: 8px 0;\n    width: 100%;\n    outline: none;\n  }\n  ts-input > input:invalid {\n    /* reset the default style in FF */\n    box-shadow: none;\n  }\n  ts-input > ts-md-decorator {\n    display: block;\n    height: 1px;\n    width: 100%;\n    margin: auto;\n    border-top: 1px solid #ccc;\n    position: relative;\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  ts-input ts-underline {\n    display: block;\n    height: 2px;\n    width: 100%;\n    margin: auto;\n    background-color: var(--app-accent-color);\n    position: absolute;\n    top: -1px;\n    left: 0;\n    -webkit-transform: scale3d(0, 1, 1);\n    transform: scale3d(0, 1, 1);\n    transition: -webkit-transform 0.2s ease-in;\n    transition: transform 0.2s ease-in;\n  }\n  /* input label */\n  ts-input > ts-md-decorator > label {\n    display: block;\n    pointer-events: none;\n    opacity: 1;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0;\n    transition-property: opacity, -webkit-transform;\n    transition-property: opacity, transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease-out;\n    will-change: transform;\n    -webkit-transform: translate3d(0px, -1.9em, 0px);\n    transform: translate3d(0px, -1.9em, 0px);\n  }\n  /* Error message */\n  ts-input > ts-md-decorator::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    font-size: 0.65em;\n    color: #dd2c00;\n    content: attr(error-message);\n    display: none;\n    white-space: nowrap;\n  }\n  ts-input > input:focus + ts-md-decorator > ts-underline {\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  /* Label: valid state */\n  ts-input > input:focus + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  ts-input > input:optional:not(:placeholder-shown) + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  _:-ms-lang(x), ts-input > input + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  ts-input > input:optional:-moz-ui-valid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  /* Underline */\n  ts-input > input:not(:focus):not(:placeholder-shown):invalid + ts-md-decorator > ts-underline {\n    background-color: #dd2c00;\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  ts-input > input:not(:focus):-moz-ui-invalid:invalid + ts-md-decorator > ts-underline {\n    background-color: #dd2c00;\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  ts-input > input[aria-invalid='true']:not(:valid) + ts-md-decorator > ts-underline {\n    background-color: #dd2c00;\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  /* Error message */\n  ts-input > input:not(:focus):not(:placeholder-shown):invalid + ts-md-decorator::after {\n    display: block;\n  }\n  ts-input > input:not(:focus):-moz-ui-invalid:invalid + ts-md-decorator::after {\n    display: block;\n  }\n  ts-input > input[aria-invalid='true']:not(:valid) + ts-md-decorator::after {\n    display: block;\n  }\n  /* Error label */\n  ts-input > input:not(:focus):not(:placeholder-shown):invalid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n    color: #dd2c00;\n  }\n  ts-input > input:not(:focus):-moz-ui-invalid:invalid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n    color: #dd2c00;\n  }\n  ts-input > input[aria-invalid='true']:not(:valid) + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n    color: #dd2c00;\n  }\n  /* Valid label */\n  ts-input > input:not(:focus):required:valid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n`;","\n\nimport { css } from 'lit-element';\n\nexport const TsSelectStyle = css`\n  ts-select {\n    display: inline-block;\n    margin: 10px 0px 20px 0px;\n    position: relative;\n    /* create a layer to avoid invalidation from other controls*/\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  ts-select > ts-md-decorator {\n    display: block;\n    border-top: 1px solid var(--border-grey);\n    height: 1px;\n    speak: none;\n  }\n  ts-select > ts-md-decorator::after {\n    content: '\\\\25BC';\n    display: block;\n    position: absolute;\n    bottom: calc(50% - 0.75em);\n    right: 8px;\n    speak: none;\n    -webkit-transform: scaleY(.6);\n    transform: scaleY(.6);\n    color: var(--app-secondary-color);\n    pointer-events: none;\n  }\n  ts-select > select {\n    width: 100%;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    padding: 0px 24px 10px 0;\n    border: none;\n    background-color: transparent;\n    border-radius: 0;\n    font-size: 1em;\n    font-weight: 300;\n    color: var(--form-text-color);\n    opacity: 1;\n    overflow: hidden;\n    margin: 0;\n    outline: none;\n  }\n  ts-select > select::-ms-expand {\n    display: none;\n  }\n  ts-select > ts-md-decorator > ts-underline {\n    display: block;\n    background-color: var(--app-accent-color);\n    height: 2px;\n    position: relative;\n    top: -1px;\n    width: 100%;\n    margin: auto;\n    -webkit-transform: scale3d(0, 1, 1);\n    transform: scale3d(0, 1, 1);\n    transition: -webkit-transform 0.2s ease-in;\n    transition: transform 0.2s ease-in;\n  }\n  ts-select > select:focus + ts-md-decorator > ts-underline {\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  ts-select > select:focus + ts-md-decorator::before,\n  ts-select > select:focus + ts-md-decorator::after,\n  ts-select > select:focus {\n    color: black;\n  }\n  /* hide the focus ring in firefox */\n  ts-select > select:focus:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 var(--app-secondary-color);\n  }\n  ts-select > [prefix] {\n    position: absolute;\n    left: 0px;\n    top: calc(50% - 8px);\n    line-height: 16px;\n    color: var(--app-secondary-color);\n    opacity: 1;\n    pointer-events: none;\n  }\n`;","\n\nimport { css } from 'lit-element';\n\nexport const TsTextAreaStyle = css`\n  ts-textarea {\n    display: inline-block;\n    margin: 5px 0px 5px 0px;\n  }\n  ts-textarea > textarea::-webkit-input-placeholder {\n    color: transparent;\n  }\n  ts-textarea > textarea::-moz-placeholder {\n    color: transparent;\n  }\n  ts-textarea > textarea:-ms-input-placeholder {\n    color: transparent;\n  }\n  ts-textarea > textarea::-ms-input-placeholder {\n    color: transparent;\n  }\n  ts-textarea > textarea {\n    font-size: 1em;\n    font-weight: 300;\n    color: var(--app-secondary-color);\n    border: none;\n    padding: 0px 0px;\n    height: 14px;\n    width: 100%;\n    outline: none;\n  }\n  ts-textarea > textarea:invalid {\n    /* reset the default style in FF */\n    box-shadow: none;\n  }\n  ts-textarea > ts-md-decorator {\n    display: block;\n    height: 1px;\n    width: 100%;\n    margin: auto;\n    border-top: 1px solid #ccc;\n    position: relative;\n    -webkit-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  ts-textarea ts-underline {\n    display: block;\n    height: 2px;\n    width: 100%;\n    margin: auto;\n    background-color: var(--app-accent-color);\n    position: absolute;\n    top: -1px;\n    left: 0;\n    -webkit-transform: scale3d(0, 1, 1);\n    transform: scale3d(0, 1, 1);\n    transition: -webkit-transform 0.2s ease-in;\n    transition: transform 0.2s ease-in;\n  }\n  /* textarea label */\n  ts-textarea > ts-md-decorator > label {\n    display: block;\n    pointer-events: none;\n    opacity: 1;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    -webkit-transform-origin: 0 0;\n    transform-origin: 0 0;\n    transition-property: opacity, -webkit-transform;\n    transition-property: opacity, transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease-out;\n    will-change: transform;\n    -webkit-transform: translate3d(0px, -1.9em, 0px);\n    transform: translate3d(0px, -1.9em, 0px);\n  }\n  /* Error message */\n  ts-textarea > ts-md-decorator::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    font-size: 0.65em;\n    color: #dd2c00;\n    content: attr(error-message);\n    display: none;\n    white-space: nowrap;\n  }\n  ts-textarea > textarea:focus + ts-md-decorator > ts-underline {\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  /* Label: valid state */\n  ts-textarea > textarea:focus + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  ts-textarea > textarea:optional:not(:placeholder-shown) + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  _:-ms-lang(x), ts-textarea > textarea + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  ts-textarea > textarea:optional:-moz-ui-valid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n  /* Underline */\n  ts-textarea > textarea:not(:focus):not(:placeholder-shown):invalid + ts-md-decorator > ts-underline {\n    background-color: #dd2c00;\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  ts-textarea > textarea:not(:focus):-moz-ui-invalid:invalid + ts-md-decorator > ts-underline {\n    background-color: #dd2c00;\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  ts-textarea > textarea[aria-invalid='true']:not(:valid) + ts-md-decorator > ts-underline {\n    background-color: #dd2c00;\n    -webkit-transform: scale3d(1, 1, 1);\n    transform: scale3d(1, 1, 1);\n    transition: -webkit-transform 0.2s ease-out;\n    transition: transform 0.2s ease-out;\n  }\n  /* Error message */\n  ts-textarea > textarea:not(:focus):not(:placeholder-shown):invalid + ts-md-decorator::after {\n    display: block;\n  }\n  ts-textarea > textarea:not(:focus):-moz-ui-invalid:invalid + ts-md-decorator::after {\n    display: block;\n  }\n  ts-textarea > textarea[aria-invalid='true']:not(:valid) + ts-md-decorator::after {\n    display: block;\n  }\n  /* Error label */\n  ts-textarea > textarea:not(:focus):not(:placeholder-shown):invalid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n    color: #dd2c00;\n  }\n  ts-textarea > textarea:not(:focus):-moz-ui-invalid:invalid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n    color: #dd2c00;\n  }\n  ts-textarea > textarea[aria-invalid='true']:not(:valid) + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n    color: #dd2c00;\n  }\n  /* Valid label */\n  ts-textarea > textarea:not(:focus):required:valid + ts-md-decorator > label {\n    -webkit-transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    transform: translate3d(0px, -3.4em, 0px) scale(0.8, 0.8);\n    opacity: 1;\n  }\n`;","import { HP_HOST } from './ts-config';\n\nimport { html, css, unsafeCSS } from 'lit-element';\nimport { PageViewElement } from './page-view-element.js';\n\nimport { SharedStyles } from './ts-style-shared';\nimport { TsFormStyle } from './ts-style-form';\nimport { TsInputStyle } from './ts-style-input';\nimport { TsSelectStyle } from './ts-style-select';\nimport { TsTextAreaStyle } from './ts-style-textarea';\nimport { announceLabel } from '../actions/app.js';\n\nconst cdnHost = unsafeCSS(HP_HOST);\n\nclass TSContact extends PageViewElement {\n  static get styles() {\n    return [\n      SharedStyles,\n      TsFormStyle,\n      TsInputStyle,\n      TsSelectStyle,\n      TsTextAreaStyle,\n      css`\n\n      :host {\n        display: block;\n        padding: 0px;\n      }\n\n      /* Smaller than 460 */\n\n      #contactForm {\n        margin-top: 40px;\n      }\n\n      .hero {\n        background: var(--app-light-text-color) url('https://${cdnHost}/images/header/ts-care-header-opt.svg') no-repeat;\n        background-size: contain;\n        background-position: center center;\n      }\n\n      h3 {\n        padding-top: 20px; }\n\n      ts-button > * {\n        display: inline-block;\n        box-sizing: border-box;\n        border: 2px solid var(--app-secondary-color);\n        background-color: var(--app-light-text-color);\n        font-size: 1rem;\n        font-weight: 500;\n        color: var(--app-secondary-color);\n        margin: 0;\n        padding: 8px 44px;\n        text-align: center;\n        text-decoration: none;\n        text-transform: uppercase;\n        border-radius: 0;\n        outline: none;\n        -webkit-appearance: none;\n        margin-top:14px;\n        width:100%;\n      }\n\n      ts-input, ts-select, ts-textarea {\n        width: 100%;\n      }\n\n      @media (min-width: 460px) {\n        ts-input, ts-select, ts-textarea {\n          margin-bottom: 20px;\n        }\n        paper-spinner-lite {\n          position: fixed;\n          top: calc(50% - 14px);\n          left: calc(50% - 14px);\n        }\n\n        .hero {\n          background-position: 92% center;\n        }\n\n        .hero>div {\n          min-height: 120px;  \n        }\n\n        .ts-contact-body {\n          margin-bottom: 24px;\n        }\n\n        .ts-contact-wrapper {\n          background-color: var(--app-light-text-color);\n          border-top: 1px solid #ccc;\n        }\n\n        .ts-contact-body h2 {\n          margin-bottom: 16px;\n        }\n\n        #ts-site .ts-pad-right-4 {\n          padding-right: 32px;\n        }\n\n        .main-frame {\n          transition: opacity 0.5s;\n        }\n        .main-frame.waiting {\n          opacity: 0.1;\n        }\n        ts-input, ts-select, ts-textarea {\n          font-size: 1.15rem;\n        }\n        .billing-address-picker {\n          margin: 28px 0;\n          height: 20px;\n          display: flex;\n        }\n        .billing-address-picker > label {\n          margin-left: 12px;\n        }\n        .grid {\n          margin-top: 40px;\n          display: flex;\n        }\n        .grid > section {\n          flex: 1;\n        }\n        .grid > section:not(:first-child) {\n          margin-left: 80px;\n        }\n        .row {\n          display: flex;\n          align-items: flex-end;\n        }\n        .column {\n          display: flex;\n          flex-direction: column;\n        }\n        .row > .flex,\n        .input-row > * {\n          flex: 1;\n        }\n        .input-row > *:not(:first-child) {\n          margin-left: 8px;\n        }\n        label.ts-select-label {\n          line-height: 20px;\n          color: #ccc;\n        }\n        .order-summary-row {\n          line-height: 24px;\n        }\n        .total-row {\n          font-weight: 500;\n          margin: 30px 0;\n        }\n\n        @media (max-width: 767px) {\n        .grid {\n            display: block;\n            margin-top: 0;\n          }\n        .grid > section:not(:first-child) {\n            margin-left: 0;\n          }\n        #ts-site.ts-care {\n          background-position: 100% 140px !important; }\n\n        .ts-right {\n          float: none !important;\n          margin: 24px 30px 5px; }\n        } \n      }\n    `\n    ];\n  } \n\n  render() {\n    const requestip = location.hostname; \n    const { _response, _state, _waiting } = this;\n    return html `\n    <article id=\"ts-site\" class=\"ts-care\">\n      <header class=\"hero\">\n        <div class=\"ts-header-wrapper fade-in\">\n          <h1 class=\"paper-font-display2 paper-font-light\">Contact Us</h1>\n          <h2 class=\"paper-font-title paper-font-light\">Touch base with one of our WordPress experts</h2>\n        </div>\n      </header>\n      <div class=\"ts-contact-wrapper delayed-fade-in\">\n        <div class=\"${_waiting ? 'main-frame waiting' : 'main-frame'}\">\n          <div state=\"init\">\n            <form id=\"contactForm\">\n              <input type=\"hidden\" id=\"requestip\" name=\"requestip\" value=\"${ requestip }\">\n              <div class=\"subsection grid\">\n                <section>\n                  <div class=\"row input-row\">\n                    <ts-input>\n                    <input type=\"text\" id=\"first_name\" name=\"first_name\" pattern=\".{3,}\"\n                            placeholder=\"First name\" autofocus required\n                            autocomplete=\"first-name\">\n                        <ts-md-decorator error-message=\"Invalid Name\" aria-hidden=\"true\">\n                        <label for=\"first_name\">First name</label>\n                          <ts-underline></ts-underline>\n                      </ts-md-decorator>\n                    </ts-input>\n                  </div>\n                  <div class=\"row input-row\">\n                    <ts-input> \n                    <input type=\"text\" id=\"last_name\" name=\"last_name\" pattern=\".{3,}\"\n                            placeholder=\"Last name\" required\n                            autocomplete=\"last-name\">\n                      <ts-md-decorator error-message=\"Invalid Name\" aria-hidden=\"true\">\n                      <label for=\"last_name\">Last name</label>\n                        <ts-underline></ts-underline>\n                      </ts-md-decorator>\n                    </ts-input>\n                  </div>\n                  <div class=\"row input-row\">\n                  <ts-input>\n                    <input type=\"email\" id=\"email\" name=\"email\"\n                        placeholder=\"Email\" required\n                        aria-labelledby=\"EmailLabel InfoHeading\">\n                    <ts-md-decorator error-message=\"Invalid Email\" aria-hidden=\"true\">\n                    <label id=\"EmailLabel\">Email</label>\n                     <ts-underline></ts-underline>\n                    </ts-md-decorator>\n                  </ts-input>\n                  </div>\n                  <div class=\"column\">\n                    <ts-select>\n                      <select id=\"type\" name=\"type\" required\n                          autocomplete=\"contact type\"\n                          aria-labelledby=\"typeLabel typeHeading\">\n                        <option value=\"general\" selected>General</option>\n                        <option value=\"hosting\">Hosting</option>\n                        <option value=\"design\">Web Design</option>\n                        <option value=\"pagespeed\">PageSpeed</option>\n                        <option value=\"emergency\">Emergency</option>\n                        <option value=\"security\">Security</option>\n                        <option value=\"migration\">Site Migration</option>\n                        <option value=\"press\">Press Inquiry</option>\n                      </select>\n                      <ts-md-decorator aria-hidden=\"true\">               \n                      <ts-underline></ts-underline>\n                      </ts-md-decorator>\n                    </ts-select>\n                  </div>\n                </section>\n                <section>\n                  <div class=\"row input-row\">\n                    <ts-input>\n                      <input type=\"url\" id=\"website\" name=\"website\"\n                          placeholder=\"https://yoursite.com\" required\n                          aria-labelledby=\"WebsiteLabel InfoHeading\">\n                      <ts-md-decorator error-message=\"Invalid URL\" aria-hidden=\"true\">\n                        <label id=\"WebsiteLabel\">Website URL</label>\n                        <ts-underline></ts-underline>\n                      </ts-md-decorator>\n                    </ts-input>\n                  </div>\n                  <div class=\"row input-row\">\n                    <ts-textarea style=\"margin-top:20px;\">\n                      <textarea id=\"description\" name=\"description\" \n                          placeholder=\"Description\" required \n                          aria-labelledby=\"DescriptionLabel InfoHeading\"></textarea>\n                      <ts-md-decorator error-message=\"Invalid Name\" aria-hidden=\"true\">\n                          <label ID=\"DescriptionLabel\">Description</label>\n                          <ts-underline></ts-underline>\n                        </ts-md-decorator>\n                    </ts-textarea>\n                  </div>\n                  <ts-button responsive id=\"submitBox\">\n                    <input type=\"button\" @click=\"${e => this._submit()}\" value=\"Submit Inquiry\">\n                  </ts-button>\n                </section>\n              </div>\n            </form>\n          </div>  \n        </div>\n      </div>\n    </article> \n  <!-- Show spinner when waiting for the server to repond -->\n  <paper-spinner-lite ?active=\"${_waiting}\"></paper-spinner-lite>\n  `;\n  }\n\n  static get properties() { return {\n    _waiting: { type: Boolean },\n    _type: { type: String },\n    _response: { type: Object }\n  };}\n\n  stateChanged(state) {\n    this._type = state.contact.type;\n  }\n\n\n  _submit() {\n    const contactForm = this.shadowRoot.querySelector('#contactForm');\n    if (this._validateForm(contactForm)) {\n      this._sendRequest(contactForm)\n        .then(res => res.json())\n        .then(data => this._didReceiveResponse(data))\n        .catch(_ => this._didReceiveResponse({\n          error: 1,\n          errorMessage: 'Transaction failed.'\n        }));\n    }\n  }\n\n  /**\n   * Validates the form's inputs and adds the `aria-invalid` attribute to the inputs\n   * that don't match the pattern specified in the markup.\n   */\n  _validateForm(form) {\n    let firstInvalid = false;\n\n    for (let el, i = 0; el = form.elements[i], i < form.elements.length; i++) {\n      if (el.checkValidity()) {\n        el.removeAttribute('aria-invalid');\n      } else {\n        if (!firstInvalid) {\n          // announce error message\n          if (el.nextElementSibling) {\n            //dispatch(announceLabel(el.nextElementSibling.getAttribute('error-message')));\n          }\n          if (el.scrollIntoViewIfNeeded) {\n            // safari, chrome\n            el.scrollIntoViewIfNeeded();\n          } else {\n            // firefox, edge, ie\n            el.scrollIntoView(false);\n          }\n          el.focus();\n          firstInvalid = true;\n        }\n        el.setAttribute('aria-invalid', 'true');\n      }\n    }\n    return !firstInvalid;\n  }\n\n  /**\n   * Sends form and cart data to the server and updates the UI to reflect\n   * the waiting state.\n   */\n  _sendRequest(form) {\n    this._waiting = true;\n\n    return fetch('https://localhost:10443/api/content/create?type=Contact', {\n      mode: 'no-cors',\n      method: 'POST',\n      body: JSON.stringify({\n        // ccExpMonth: form.elements.ccExpMonth.value,\n        FirstName: form.elements.first_name.value,\n        LastName: form.elements.last_name.value,\n        Email: form.elements.email.value,\n        Subject: form.elements.type.value,\n        Website: form.elements.website.value,\n        Description: form.elements.description.value\n      }),\n      headers: {\n        'Content-Type': 'multipart/form-data; boundary=------------------------d74496d66958873e--'\n      }\n    });\n  }\n\n  /**\n   * Handles the response from the server by checking the response status\n   * and transitioning to the success or error UI.\n   */\n  _didReceiveResponse(response) {\n    this._response = response;\n    this._waiting = false;\n  }\n\n}\nwindow.customElements.define('ts-contact', TSContact);"],"names":["TsFormStyle","css","TsInputStyle","TsSelectStyle","TsTextAreaStyle","cdnHost","unsafeCSS","HP_HOST","window","customElements","define","PageViewElement","styles","SharedStyles","[object Object]","requestip","location","hostname","_response","_state","_waiting","this","html","e","_submit","properties","type","Boolean","_type","String","Object","state","contact","contactForm","shadowRoot","querySelector","_validateForm","_sendRequest","then","res","json","data","_didReceiveResponse","catch","_","error","errorMessage","form","firstInvalid","el","i","elements","length","checkValidity","removeAttribute","nextElementSibling","scrollIntoViewIfNeeded","scrollIntoView","focus","setAttribute","fetch","mode","method","body","JSON","stringify","FirstName","first_name","value","LastName","last_name","Email","email","Subject","Website","website","Description","description","headers","Content-Type","response"],"mappings":"4GAIO,MAAMA,EAAcC,mPCAdC,EAAeD,qgICAfE,EAAgBF,slDCAhBG,EAAkBH,4pICQzBI,EAAUC,EAAUC,GA6W1BC,OAAOC,eAAeC,OAAO,aA3W7B,cAAwBC,EACtBC,oBACE,MAAO,CACLC,EACAb,EACAE,EACAC,EACAC,EACAH,yHAcyDI,gxDA6I7DS,SACE,MAAMC,EAAYC,SAASC,UACrBC,UAAEA,EAASC,OAAEA,EAAMC,SAAEA,GAAaC,KACxC,OAAOC,yUASWF,EAAW,qBAAuB,0GAGqBL,8zEAgF1BQ,GAAKF,KAAKG,+HAU5BJ,0BAI/BK,wBAA0B,MAAO,CAC/BL,SAAU,CAAEM,KAAMC,SAClBC,MAAO,CAAEF,KAAMG,QACfX,UAAW,CAAEQ,KAAMI,SAGrBhB,aAAaiB,GACXV,KAAKO,MAAQG,EAAMC,QAAQN,KAI7BZ,UACE,MAAMmB,EAAcZ,KAAKa,WAAWC,cAAc,gBAC9Cd,KAAKe,cAAcH,IACrBZ,KAAKgB,aAAaJ,GACfK,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQpB,KAAKqB,oBAAoBD,IACtCE,MAAMC,GAAKvB,KAAKqB,oBAAoB,CACnCG,MAAO,EACPC,aAAc,yBAStBhC,cAAciC,GACZ,IAAIC,GAAe,EAEnB,IAAK,IAAIC,EAAIC,EAAI,EAAGD,EAAKF,EAAKI,SAASD,GAAIA,EAAIH,EAAKI,SAASC,OAAQF,IAC/DD,EAAGI,gBACLJ,EAAGK,gBAAgB,iBAEdN,IAECC,EAAGM,mBAGHN,EAAGO,uBAELP,EAAGO,yBAGHP,EAAGQ,gBAAe,GAEpBR,EAAGS,QACHV,GAAe,GAEjBC,EAAGU,aAAa,eAAgB,SAGpC,OAAQX,EAOVlC,aAAaiC,GAGX,OAFA1B,KAAKD,UAAW,EAETwC,MAAM,0DAA2D,CACtEC,KAAM,UACNC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAEnBC,UAAWnB,EAAKI,SAASgB,WAAWC,MACpCC,SAAUtB,EAAKI,SAASmB,UAAUF,MAClCG,MAAOxB,EAAKI,SAASqB,MAAMJ,MAC3BK,QAAS1B,EAAKI,SAASzB,KAAK0C,MAC5BM,QAAS3B,EAAKI,SAASwB,QAAQP,MAC/BQ,YAAa7B,EAAKI,SAAS0B,YAAYT,QAEzCU,QAAS,CACPC,eAAgB,8EAStBjE,oBAAoBkE,GAClB3D,KAAKH,UAAY8D,EACjB3D,KAAKD,UAAW"}