{"version":3,"file":"chunk-c9982ad5.js","sources":["../../src/components/ts-config.js","../../src/actions/app.js"],"sourcesContent":["/**\n  Main application configuration file.\n\n  HP_HOST: Add your production domain here.\n  WP_REST_API_HOST: Add the production wp-rest api domain here.\n  WP_REST_PATH: Defaults to latest wp-rest api path. Should be updated if changed.\n  CDN_HOST_URL: Add the CDN domain assigned to your by your provider. Set to HP_HOST if none.\n\n  Import this file on all all elements that use absolute urls to\n  external providers\n*/\n\nexport const HP_HOST = 'hyperpress.app';\nexport const WP_REST_API_HOST = 'api.hyperpress.app';\nexport const WP_REST_PATH = 'wp-json/wp/v2';\nexport const CDN_HOST_URL = 'cdn1-themesurgesonslt.netdna-ssl.com';","export const UPDATE_PAGE = \"UPDATE_PAGE\";\nexport const UPDATE_OFFLINE = \"UPDATE_OFFLINE\";\nexport const UPDATE_DRAWER_STATE = \"UPDATE_DRAWER_STATE\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\nexport const OPEN_SNACKBAR = \"OPEN_SNACKBAR\";\nexport const CLOSE_SNACKBAR = \"CLOSE_SNACKBAR\";\nexport const UPDATE_SUBTITLE = \"UPDATE_SUBTITLE\";\nexport const SET_ANNOUNCER_LABEL = \"SET_ANNOUNCER_LABEL\";\nexport const CLEAR_ANNOUNCER_LABEL = \"CLEAR_ANNOUNCER_LABEL\";\n\nexport const navigate = location => dispatch => {\n  // Extract the page name from path.\n  // Any other info you might want to extract from the path (like page type),\n  // you can do here.\n  const pathname = location.pathname;\n  const parts = pathname.slice(1).split(\"/\");\n  const page = parts[0] || \"home\";\n  // post id is in the path: /detail/{postId}\n  const articleSlug = parts[1];\n\n  //let query = 'Article';\n  let query = \"posts\";\n\n  dispatch(loadPage(page, query, articleSlug));\n  dispatch(updateDrawerState(false));\n};\n\nconst loadPage = (page, query, articleSlug) => async (dispatch, getState) => {\n  let module;\n  switch (page) {\n    case \"home\":\n      break;\n    case \"blog\":\n      module = await import(\"../components/ts-blog.js\");\n      dispatch(module.fetchArticles(query));\n      break;\n    case \"article\":\n      module = await import(\"../components/ts-article.js\");\n      await dispatch(module.fetchArticle(articleSlug));\n      if (isFetchArticleFailed(getState().article)) {\n        page = \"404\";\n      }\n      break;\n    case \"care\":\n      await import(\"../components/ts-care.js\");\n      break;\n    case \"design\":\n      await import(\"../components/ts-design.js\");\n      break;\n    case \"emergency\":\n      await import(\"../components/ts-emergency.js\");\n      break;\n    case \"migrations\":\n      await import(\"../components/ts-migrations.js\");\n      break;\n    case \"pagespeed\":\n      await import(\"../components/ts-pagespeed.js\");\n      break;\n    case \"privacy\":\n      await import(\"../components/ts-privacy.js\");\n      break;\n    case \"security\":\n      await import(\"../components/ts-security.js\");\n      break;\n    case \"contact\":\n      await import(\"../components/ts-contact.js\");\n      break;\n    default:\n      page = \"404\";\n  }\n\n  if (page === \"404\") {\n    import(\"../components/ts-view404.js\");\n  }\n\n  dispatch(updatePage(page));\n\n};\n\nexport const refreshPage = () => (dispatch, getState) => {\n  const state = getState();\n  // load page using the current state\n  dispatch(\n    loadPage(\n      state.app.page,\n      state.articles && state.articles.query,\n      state.article && state.article.slug\n    )\n  );\n};\n\nconst updatePage = page => {\n  return {\n    type: UPDATE_PAGE,\n    page\n  };\n};\n\nconst isFetchArticleFailed = (article) => {\n  return !article.isFetching && article.failure;\n}\n\nlet snackbarTimer;\n\nexport const showSnackbar = () => dispatch => {\n  dispatch({\n    type: OPEN_SNACKBAR\n  });\n  clearTimeout(snackbarTimer);\n  snackbarTimer = setTimeout(\n    () =>\n      dispatch({\n        type: CLOSE_SNACKBAR\n      }),\n    3000\n  );\n};\n\nexport const updateOffline = offline => (dispatch, getState) => {\n  const prev = getState().app.offline;\n  dispatch({\n    type: UPDATE_OFFLINE,\n    offline\n  });\n  if (prev !== undefined) {\n    dispatch(showSnackbar());\n  }\n  //  automatically refresh when you come back online (offline was true and now is false)\n  if (prev === true && offline === false) {\n    dispatch(refreshPage());\n  }\n};\n\nexport const updateLayout = wide => (dispatch, getState) => {\n  if (getState().app.drawerOpened) {\n    dispatch(updateDrawerState(false));\n  }\n};\n\nexport const updateDrawerState = opened => (dispatch, getState) => {\n  if (getState().app.drawerOpened !== opened) {\n    dispatch({\n      type: UPDATE_DRAWER_STATE,\n      opened\n    });\n  }\n};\n\nexport const updateSubTitle = subTitle => {\n  return {\n    type: UPDATE_SUBTITLE,\n    subTitle\n  };\n};\n\nexport const updateLocationURL = url => dispatch => {\n  window.history.pushState({}, \"\", url);\n  dispatch(navigate(window.location));\n};\n\nconst setAnnouncerLabel = label => {\n  return {\n    type: SET_ANNOUNCER_LABEL,\n    label\n  };\n};\n\nconst clearAnnouncerLabel = () => {\n  return {\n    type: CLEAR_ANNOUNCER_LABEL\n  };\n};\n\nlet announcerTimer = 0;\n\nexport const announceLabel = label => dispatch => {\n  dispatch(clearAnnouncerLabel());\n  // Debounce announcements.\n  clearTimeout(announcerTimer);\n  announcerTimer = setTimeout(() => {\n    dispatch(setAnnouncerLabel(label));\n  }, 300);\n};\n"],"names":["HP_HOST","WP_REST_API_HOST","WP_REST_PATH","CDN_HOST_URL","UPDATE_PAGE","UPDATE_OFFLINE","UPDATE_DRAWER_STATE","CLOSE_MODAL","OPEN_SNACKBAR","CLOSE_SNACKBAR","SET_ANNOUNCER_LABEL","CLEAR_ANNOUNCER_LABEL","navigate","location","dispatch","parts","pathname","slice","split","page","articleSlug","loadPage","updateDrawerState","query","async","getState","module","import","fetchArticles","fetchArticle","isFetchArticleFailed","article","updatePage","refreshPage","state","app","articles","slug","type","isFetching","failure","snackbarTimer","updateOffline","offline","prev","undefined","clearTimeout","setTimeout","showSnackbar","updateLayout","wide","drawerOpened","opened"],"mappings":"AAYY,MAACA,EAAU,iBACVC,EAAmB,qBACnBC,EAAe,gBACfC,EAAe,uCCffC,EAAc,cACdC,EAAiB,iBACjBC,EAAsB,sBACtBC,EAAc,cACdC,EAAgB,gBAChBC,EAAiB,iBAEjBC,EAAsB,sBACtBC,EAAwB,wBAExBC,EAAWC,GAAYC,IAIlC,MACMC,EADWF,EAASG,SACHC,MAAM,GAAGC,MAAM,KAChCC,EAAOJ,EAAM,IAAM,OAEnBK,EAAcL,EAAM,GAK1BD,EAASO,EAASF,EAFN,QAEmBC,IAC/BN,EAASQ,GAAkB,KAGvBD,EAAW,CAACF,EAAMI,EAAOH,IAAgBI,MAAOV,EAAUW,KAC9D,IAAIC,EACJ,OAAQP,GACN,IAAK,OACH,MACF,IAAK,OAEHL,GADAY,QAAeC,OAAO,wBACNC,cAAcL,IAC9B,MACF,IAAK,UACHG,QAAeC,OAAO,6BAChBb,EAASY,EAAOG,aAAaT,IAC/BU,EAAqBL,IAAWM,WAClCZ,EAAO,OAET,MACF,IAAK,aACGQ,OAAO,uBACb,MACF,IAAK,eACGA,OAAO,uBACb,MACF,IAAK,kBACGA,OAAO,uBACb,MACF,IAAK,mBACGA,OAAO,uBACb,MACF,IAAK,kBACGA,OAAO,uBACb,MACF,IAAK,gBACGA,OAAO,uBACb,MACF,IAAK,iBACGA,OAAO,uBACb,MACF,IAAK,gBACGA,OAAO,uBACb,MACF,QACER,EAAO,MAGE,QAATA,GACFQ,OAAO,uBAGTb,EAASkB,EAAWb,KAITc,EAAc,IAAM,CAACnB,EAAUW,KAC1C,MAAMS,EAAQT,IAEdX,EACEO,EACEa,EAAMC,IAAIhB,KACVe,EAAME,UAAYF,EAAME,SAASb,MACjCW,EAAMH,SAAWG,EAAMH,QAAQM,QAK/BL,EAAab,IACV,CACLmB,KA7FuB,cA8FvBnB,KAAAA,IAIEW,EAAwBC,IACpBA,EAAQQ,YAAcR,EAAQS,QAGxC,IAAIC,EAEG,MAcMC,EAAgBC,GAAW,CAAC7B,EAAUW,KACjD,MAAMmB,EAAOnB,IAAWU,IAAIQ,QAC5B7B,EAAS,CACPwB,KAxH0B,iBAyH1BK,QAAAA,SAEWE,IAATD,GACF9B,EArBwB,KAAMA,IAChCA,EAAS,CACPwB,KAtGyB,kBAwG3BQ,aAAaL,GACbA,EAAgBM,WACd,IACEjC,EAAS,CACPwB,KA3GsB,mBA6G1B,MAWSU,KAGE,IAATJ,IAA6B,IAAZD,GACnB7B,EAASmB,MAIAgB,EAAeC,GAAQ,CAACpC,EAAUW,KACzCA,IAAWU,IAAIgB,cACjBrC,EAASQ,GAAkB,KAIlBA,EAAoB8B,GAAU,CAACtC,EAAUW,KAChDA,IAAWU,IAAIgB,eAAiBC,GAClCtC,EAAS,CACPwB,KA5I6B,sBA6I7Bc,OAAAA"}